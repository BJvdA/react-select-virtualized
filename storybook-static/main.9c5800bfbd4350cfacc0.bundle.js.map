{"version":3,"file":"main.9c5800bfbd4350cfacc0.bundle.js","sources":["webpack:///./src/select-virtualized/components/fast-react-select/helpers/fast-react-select.js"],"sourcesContent":["// this is very basic analize a bit more\nexport const calculateDebounce = (size) => {\n  if (size <= 30000) {\n    return (size + 100) * 0.001; // approx 0.001 ms per action, calculate 100 extra actions. this is a constant value. pefromance degradation starts after 30000 elements\n  }\n  return (size + 100) * 0.005; // increase the action time so we have a buffer.\n};\n\n// we have to go as low level as possible. so we get the best performance here. this is the most expensive operation\nexport const filterByLowercaseLabel = (list, value) => {\n  const result = [];\n  const size = list.length;\n  for (var i = 0; i < size; i++) {\n    if (list[i].lowercaseLabel.indexOf(value) >= 0) {\n      result.push(list[i]);\n    }\n  }\n  return result;\n};\n\nexport const defaultFormatOptionLabel = (item) => item.label;\n\nexport const mapLowercaseLabel = (list, formatOptionLabel = defaultFormatOptionLabel, iterator = () => ({})) =>\n  list.map((item) => ({\n    lowercaseLabel: formatOptionLabel(item, {}).toLowerCase(),\n    ...item,\n    ...iterator(item),\n  }));\n\n//todo improve this\nexport const filterGroupedElementsBy = (list, inputValLowercase, filterBy) => {\n  return list.reduce((acc, item) => {\n    acc.push({\n      ...item,\n      options: filterBy(item.options, inputValLowercase),\n    });\n    return acc;\n  }, []);\n};\n\nexport const getFilteredItems = ({ inputValue, memoOptions, grouped }) => {\n  const inputValLowercase = inputValue && inputValue.toLowerCase();\n  if (!inputValue) {\n    return memoOptions;\n  }\n  if (grouped) {\n    return filterGroupedElementsBy(memoOptions, inputValLowercase, filterByLowercaseLabel);\n  }\n  return filterByLowercaseLabel(memoOptions, inputValLowercase);\n};\n"],"mappings":"AASA","sourceRoot":""}